"""Create initial tables

Revision ID: f4d7ae2ea20b
Revises:
Create Date: 2024-04-23 13:43:58.964859

"""

from typing import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "f4d7ae2ea20b"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("street_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("city", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "state",
            sa.Enum(
                "AL",
                "AK",
                "AZ",
                "AR",
                "CA",
                "CO",
                "CT",
                "DE",
                "FL",
                "GA",
                "HI",
                "ID",
                "IL",
                "IN",
                "IA",
                "KS",
                "KY",
                "LA",
                "ME",
                "MD",
                "MA",
                "MI",
                "MN",
                "MS",
                "MO",
                "MT",
                "NE",
                "NV",
                "NH",
                "NJ",
                "NM",
                "NY",
                "NC",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VA",
                "WA",
                "WV",
                "WI",
                "WY",
                name="state",
            ),
            nullable=True,
        ),
        sa.Column("zipcode", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "insurance_info",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "member_id_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("group_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rx_bin", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("rx_pcn", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("person_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "medications",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "sig_codes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "doctors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "doctor_type",
            sa.Enum(
                "MD",
                "DO",
                "DPM",
                "DDS",
                "DMD",
                "OD",
                "PharmD",
                "DC",
                "ND",
                "NMD",
                "DVM",
                "PhD",
                name="doctortype",
            ),
            nullable=False,
        ),
        sa.Column("office_address_id", sa.Integer(), nullable=False),
        sa.Column("contact_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("contact_email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("dea_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["office_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patients",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("contact_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("contact_email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("dob", sa.Date(), nullable=False),
        sa.Column("home_address_id", sa.Integer(), nullable=False),
        sa.Column("insurance_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["home_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["insurance_id"],
            ["insurance_info.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "patient_doctor_link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("doctor_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["doctor_id"],
            ["doctors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "prescribed_prescriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("rx_id", sa.Integer(), nullable=False),
        sa.Column("dosage", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sig_code_id", sa.Integer(), nullable=False),
        sa.Column("patient_id", sa.Integer(), nullable=False),
        sa.Column("prescribed_date", sa.Date(), nullable=False),
        sa.Column("refills", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["patient_id"],
            ["patients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rx_id"],
            ["medications.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sig_code_id"],
            ["sig_codes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("prescribed_prescriptions")
    op.drop_table("patient_doctor_link")
    op.drop_table("patients")
    op.drop_table("doctors")
    op.drop_table("sig_codes")
    op.drop_table("medications")
    op.drop_table("insurance_info")
    op.drop_table("addresses")
    # ### end Alembic commands ###
